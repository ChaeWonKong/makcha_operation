{"version":3,"sources":["api/index.js","components/common/index.jsx","components/Header.jsx","routers/Feedback.jsx","routers/Notice.jsx","routers/CreateNotice.jsx","routers/CreateFeedback.jsx","App.jsx","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","makchaApi","getFeedback","page","limit","arguments","length","undefined","get","concat","postFeedback","Uid","formData","post","headers","deleteFeedback","feedbackId","delete","getNotice","postNotice","_ref","title","content","deleteNotice","noticeId","Link","styled","RouterLink","_templateObject","Container","div","_templateObject2","Header_templateObject","MenuTextWrapper","Header_templateObject2","HeaderText","p","_templateObject3","MenuText","_templateObject4","Header","react_default","a","createElement","Header_Container","to","List","DefaultList","Feedback_templateObject","TitleWrapper","Feedback_templateObject2","PaginationContainer","Feedback_templateObject3","Feedback","state","pageSize","current","onDelete","id","console","log","then","res","status","window","location","reload","onChange","_this","setState","data","_this2","this","totalPages","_this3","_this$state","components_Header","footer","pagination","defaultPageSize","defaultCurrent","total","bordered","dataSource","renderItem","item","Item","Meta","createdDate","icon","type","onClick","description","uid","feedback","Component","Notice_templateObject","Notice_templateObject2","Notice_templateObject3","Notice","Notice_List","Notice_PaginationContainer","Notice_TitleWrapper","TextArea","Input","CreateNotice_templateObject","InputWrapper","CreateNotice_templateObject2","ButtonContainer","CreateNotice_templateObject3","CreateNotice","text","onTextChange","e","preventDefault","Object","defineProperty","target","name","value","onSubmit","href","CreateNotice_Container","input","placeholder","rows","onPressEnter","es_button","CreateFeedback_templateObject","CreateFeedback_templateObject2","CreateFeedback_templateObject3","CreateFeedback","FormData","append","CreateFeedback_Container","CreateFeedback_InputWrapper","CreateFeedback_TextArea","CreateFeedback_ButtonContainer","App","react_router_dom","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d3f86d7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet apiURL = \"https://api.makkcha.com/\";\n\nconst api = axios.create({\n  baseURL: apiURL\n});\n\nexport const makchaApi = {\n  getFeedback: (page, limit = 5) =>\n    api.get(`feedback?page=${page}&limit=${limit}`),\n  postFeedback: (Uid, formData) =>\n    api.post(`feedback`, formData, { headers: { Uid } }),\n  deleteFeedback: feedbackId => api.delete(`feedback?feedbackId=${feedbackId}`),\n  getNotice: (page, limit = 5) => api.get(`notice?page=${page}&limit=${limit}`),\n  postNotice: ({ title, content }) => api.post(`notice`, { title, content }),\n  deleteNotice: noticeId => api.delete(`notice/${noticeId}`)\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nexport const Link = styled(RouterLink)`\n  cursor: pointer;\n  color: inherit;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"./common\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst MenuTextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst HeaderText = styled.p`\n  font-size: 2rem;\n  margin: 1rem;\n`;\n\nconst MenuText = styled.p`\n  font-size: 1.4rem;\n  margin: 1rem;\n`;\n\nconst Header = () => {\n  return (\n    <Container>\n      <HeaderText>막차 운영 시스템</HeaderText>\n      <MenuTextWrapper>\n        <Link to=\"/\">\n          <MenuText>피드백 확인</MenuText>\n        </Link>\n        <Link to=\"/create-feedback\">\n          <MenuText>피드백 작성</MenuText>\n        </Link>\n        <Link to=\"/notice\">\n          <MenuText>공지사항 확인</MenuText>\n        </Link>\n        <Link to=\"/create-notice\">\n          <MenuText>공지사항 작성</MenuText>\n        </Link>\n      </MenuTextWrapper>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { List as DefaultList, Pagination, Icon } from \"antd\";\nimport styled from \"styled-components\";\nimport { makchaApi } from \"../api\";\nimport { Container } from \"../components/common\";\nimport Header from \"../components/Header\";\n\nconst List = styled(DefaultList)`\n  //   margin-top: 5rem;\n  position: absolute;\n  width: 90%;\n  top: 5rem;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nclass Feedback extends Component {\n  state = { content: [], pageSize: 5, current: 1 };\n  componentDidMount() {\n    makchaApi.getFeedback(0).then(res => {\n      this.setState({\n        content: res.data.content,\n        totalPages: res.data.totalPages\n      });\n    });\n  }\n\n  onDelete = id => {\n    console.log(id);\n    makchaApi.deleteFeedback(id).then(res => {\n      if (res.status === 200) window.location.reload();\n      console.log(\"delete success\");\n    });\n  };\n\n  onChange = page => {\n    this.setState({\n      current: page\n    });\n\n    makchaApi.getFeedback(page - 1).then(res => {\n      this.setState({\n        content: res.data.content\n      });\n    });\n  };\n\n  render() {\n    const { current, pageSize, totalPages, content } = this.state;\n    return totalPages ? (\n      <Container>\n        <Header />\n        <List\n          current={this.state.current}\n          footer={\n            <PaginationContainer>\n              <Pagination\n                current={current}\n                defaultPageSize={pageSize}\n                defaultCurrent={1}\n                total={totalPages * pageSize}\n                onChange={this.onChange}\n              />\n            </PaginationContainer>\n          }\n          bordered\n          dataSource={content}\n          renderItem={item => (\n            <List.Item>\n              <List.Item.Meta\n                title={\n                  <TitleWrapper>\n                    <p>{item.createdDate}</p>\n                    <Icon type=\"close\" onClick={() => this.onDelete(item.id)} />\n                  </TitleWrapper>\n                }\n                description={\"사용자: \" + item.uid}\n              />\n              {item.feedback}\n            </List.Item>\n          )}\n        />\n      </Container>\n    ) : (\n      <div>Loading</div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React, { Component } from \"react\";\nimport { List as DefaultList, Pagination, Icon } from \"antd\";\nimport styled from \"styled-components\";\nimport { Container } from \"../components/common\";\nimport { makchaApi } from \"../api\";\nimport Header from \"../components/Header\";\n\nconst List = styled(DefaultList)`\n  //   margin-top: 5rem;\n  position: absolute;\n  width: 90%;\n  top: 5rem;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nclass Notice extends Component {\n  state = { content: [], pageSize: 5, current: 1 };\n  componentDidMount() {\n    makchaApi.getNotice(0, this.state.pageSize).then(res => {\n      console.log(res.data);\n      this.setState({\n        content: res.data.content,\n        totalPages: res.data.totalPages\n      });\n    });\n  }\n\n  onDelete(noticeId) {\n    makchaApi.deleteNotice(noticeId).then(res => {\n      if (res.status === 200) window.location.reload();\n    });\n  }\n\n  onChange = page => {\n    this.setState({\n      current: page\n    });\n    // makchaAPI.getFeedback().then(res => {\n    makchaApi.getFeedback(page - 1, this.state.pageSize).then(res => {\n      this.setState({\n        content: res.data.content\n      });\n      console.log(res.data);\n    });\n  };\n\n  render() {\n    const { current, pageSize, totalPages, content } = this.state;\n    return totalPages ? (\n      <Container>\n        <Header />\n        <List\n          current={this.state.current}\n          footer={\n            <PaginationContainer>\n              <Pagination\n                current={current}\n                defaultPageSize={pageSize}\n                defaultCurrent={1}\n                total={totalPages * pageSize}\n                onChange={this.onChange}\n              />\n            </PaginationContainer>\n          }\n          bordered\n          dataSource={content}\n          renderItem={item => (\n            <List.Item>\n              <List.Item.Meta\n                title={\n                  <TitleWrapper>\n                    <p>{item.title}</p>\n\n                    <Icon type=\"close\" onClick={() => this.onDelete(item.id)} />\n                  </TitleWrapper>\n                }\n                description={item.content}\n              />\n              {item.feedback}\n            </List.Item>\n          )}\n        />\n      </Container>\n    ) : (\n      <div>Loading</div>\n    );\n  }\n}\n\nexport default Notice;\n","import React, { Component } from \"react\";\nimport { Link } from \"../components/common\";\nimport styled from \"styled-components\";\nimport { Input, Button } from \"antd\";\nimport Header from \"../components/Header\";\nimport { makchaApi } from \"../api\";\n\nconst { TextArea } = Input;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputWrapper = styled.div`\n  margin-top: 5rem;\n  width: 90%;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nclass CreateNotice extends Component {\n  state = { title: \"\", text: \"\" };\n\n  onTextChange = e => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = () => {\n    const { title, content } = this.state;\n    makchaApi.postNotice({ title, content }).then(res => {\n      if (res.status === 200) window.location.href = \"/notice\";\n    });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <Container>\n        <Header />\n        <InputWrapper>\n          <Input\n            value={this.state.title}\n            name=\"title\"\n            placeholder=\"제목\"\n            onChange={this.onTextChange}\n          />\n          <TextArea\n            placeholder=\"내용\"\n            name=\"content\"\n            rows={6}\n            value={this.state.content}\n            onChange={this.onTextChange}\n            onPressEnter={this.onSubmit}\n          />\n        </InputWrapper>\n        <ButtonContainer>\n          <Link to=\"/notice\">\n            <Button type=\"danger\">취소</Button>\n          </Link>\n          <Button type=\"primary\" onClick={this.onSubmit}>\n            확인\n          </Button>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default CreateNotice;\n","import React, { Component } from \"react\";\nimport { Link } from \"../components/common\";\nimport styled from \"styled-components\";\nimport { Input, Button } from \"antd\";\nimport Header from \"../components/Header\";\nimport { makchaApi } from \"../api\";\n\nconst { TextArea } = Input;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputWrapper = styled.div`\n  margin-top: 5rem;\n  width: 90%;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nclass CreateFeedback extends Component {\n  state = { content: \"\" };\n\n  onTextChange = e => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = () => {\n    const { content } = this.state;\n    let formData = new FormData();\n    const Uid = \"admin\";\n    formData.append(\"feedback\", content);\n    formData.append(\"Uid\", Uid);\n    makchaApi.postFeedback(Uid, formData).then(res => {\n      if (res.status === 200) window.location.href = \"/\";\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Header />\n        <InputWrapper>\n          <TextArea\n            placeholder=\"내용\"\n            name=\"content\"\n            rows={6}\n            value={this.state.content}\n            onChange={this.onTextChange}\n            onPressEnter={this.onSubmit}\n          />\n        </InputWrapper>\n        <ButtonContainer>\n          <Link to=\"/notice\">\n            <Button type=\"danger\">취소</Button>\n          </Link>\n          <Button type=\"primary\" onClick={this.onSubmit}>\n            확인\n          </Button>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n}\n\nexport default CreateFeedback;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Feedback from \"./routers/Feedback\";\nimport Notice from \"./routers/Notice\";\nimport CreateNotice from \"./routers/CreateNotice\";\nimport CreateFeedback from \"./routers/CreateFeedback\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Feedback} />\n        <Route path=\"/notice\" component={Notice} />\n        <Route path=\"/create-notice\" component={CreateNotice} />\n        <Route path=\"/create-feedback\" component={CreateFeedback} />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}